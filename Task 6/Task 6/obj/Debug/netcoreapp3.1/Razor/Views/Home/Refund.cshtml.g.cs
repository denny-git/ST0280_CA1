#pragma checksum "D:\CSC\CA1\code\Task 6\Task 6\Views\Home\Refund.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e882f64122bf83be4154d07132fa9277f77690c3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Refund), @"mvc.1.0.view", @"/Views/Home/Refund.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\CSC\CA1\code\Task 6\Task 6\Views\_ViewImports.cshtml"
using Task_6;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\CSC\CA1\code\Task 6\Task 6\Views\_ViewImports.cshtml"
using Task_6.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e882f64122bf83be4154d07132fa9277f77690c3", @"/Views/Home/Refund.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f72129f1f23687658569d646ebd943f77110f892", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Refund : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\CSC\CA1\code\Task 6\Task 6\Views\Home\Refund.cshtml"
  
    ViewData["Title"] = "Refund";

#line default
#line hidden
#nullable disable
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        function loadCharges() {
            var tableBody = $('#charges');

            $.ajax({
                url: '/api/charges/listcharges',
                dataType: 'json',
                success: function (data) {
                    $('#status').hide();
                    for (var i = 0; i < data.length; i++) {
                        var tableRow = '<tr>';
                        tableRow += '<td>' + data[i].created + '</td>';
                        tableRow += '<td>$' + data[i].amount / 100 + '</td>';
                        tableRow += '<td>$' + data[i].amountRefunded / 100 + '</td>';
                        tableRow += '<td>' + data[i].description + '</td>';
                        tableRow += '<td><a href=\""' + data[i].receiptUrl + '\"">Receipt</a></td>';
                        tableRow += '<td>' + data[i].status + '</td>';
                        tableRow += '<td><button onclick=\""refund(\'' + data[i].id + '\')\"">Refund</button>' + '</td>';
                 ");
                WriteLiteral(@"       tableRow += '<tr />'
                        tableBody.append(tableRow);
                    }
                    $('#charges-table').show();
                },
                error: function (result) {
                    $('#status').html('<img src=""/ajax-loader.gif"" /> Failed to load charges, retrying...');
                    setTimeout(loadCharges, 3000);
                }
            });
        }
        $('document').ready(function () {
            $('#status').html('<img src=""/ajax-loader.gif"" /> Loading charges...');
            loadCharges();
        });
        function refundRequest(chargeId) {
            $.ajax({
                url: '/api/charges/refund',
                type: 'post',
                data: { ""charge_id"": chargeId },
                success: function (data) {
                    $('#refund-charge-status').html('Successfully refunded charge');
                },
                error: function (xhr, err, data) {
                    if (xhr.status");
                WriteLiteral(@" == 0) {
                        $('#refund-charge-status').html('<img src=""/ajax-loader.gif"" /> Could not reach server. Trying again...');
                        setTimeout(function () {
                            refundRequest(chargeId);
                        }, 3000);
                    } else {
                        $('#refund-charge-status').html('Error. ' + xhr.responseJSON.message);
                    }
                }
            });
        }
        function refund(chargeId) {
            $('#refund-process-info').show();
            $('#refund-charge-status').html('<img src=""/ajax-loader.gif"" /> Refunding charge...');
            refundRequest(chargeId);
        }
    </script>
");
            }
            );
            WriteLiteral(@"
<style>
    td, th {
        padding: 1em;
    }

    #charges-table {
        display: none;
    }

    tr, th, tbody, td, #charges-table {
        border: 1px solid;
    }

    #refund-process-info {
        display: none;
    }
</style>

<h1>Refund charges</h1>
<br />
<div id=""status""></div>
<div>
    <table id=""charges-table"">
        <thead>
            <tr>
                <th>Created</th>
                <th>Amount</th>
                <th>Amount refunded</th>
                <th>Description</th>
                <th>Receipt URL</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id=""charges"">
        </tbody>
    </table>
</div>
<br>
<div id=""refund-process-info"">
    <h2>Refund charge</h2>
    <div id=""refund-charge-status""></div>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
